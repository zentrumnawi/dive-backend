# Generated by Django 3.0.8 on 2021-03-21 13:10

from django.db import migrations, models
from django.db.models import Q

leaf_num_fields = (
    "leaf_comp_num",
    "incision_num",
    "leaflet_incision_num",
    "leaf_simple_num",
)


def update_leaf_num_fields(obj, mark, replace_mark):
    for lnf in leaf_num_fields:
        field = getattr(obj, lnf)
        if mark in field:
            field = field.split(mark, 1)
            setattr(obj, lnf, f"{field[0]}{replace_mark}{field[1]}")
    obj.save()


def update_leaf_num_fields_forwards(apps, schema_editor):
    # Replace hyphens with dashes in all Leaf model number range values.
    Leaf = apps.get_model("dive_content", "Leaf")

    mark = "-"  # hyphen
    replace_mark = "–"  # dash
    lookup = Q(**{f"{lnf}__contains": mark for lnf in leaf_num_fields}, _connector=Q.OR)

    for obj in Leaf.objects.filter(lookup):
        update_leaf_num_fields(obj, mark, replace_mark)


def update_leaf_num_fields_reverse(apps, schema_editor):
    # Replace dashes with hyphens in all Leaf model number range values.
    Leaf = apps.get_model("dive_content", "Leaf")

    mark = "–"  # dash
    replace_mark = "-"  # hyphen
    lookup = Q(**{f"{lnf}__contains": mark for lnf in leaf_num_fields}, _connector=Q.OR)

    for obj in Leaf.objects.filter(lookup):
        update_leaf_num_fields(obj, mark, replace_mark)


def update_fruit_ovule_pos(apps, schema_editor):
    Fruit = apps.get_model("dive_content", "Fruit")

    for obj in Fruit.objects.filter(ovule_pos="sp"):
        obj.ovule_pos = ""
        obj.save()


class Migration(migrations.Migration):

    dependencies = [
        ("dive_content", "0060_bulk_rename_fruit"),
    ]

    operations = [
        migrations.RunPython(
            update_leaf_num_fields_forwards, update_leaf_num_fields_reverse
        ),
        migrations.AlterField(
            model_name="fruit",
            name="fruit_type",
            field=models.CharField(
                blank=True,
                choices=[
                    ("apf", "Apfelfrucht"),
                    ("nus", "Nuss"),
                    ("kar", "Karyopse"),
                    ("ach", "Achäne"),
                    ("bee", "Beere"),
                    ("ste", "Steinfrucht"),
                    ("bal", "Balgfrucht"),
                    ("hue", "Hülse"),
                    ("kap", "Kapsel"),
                    ("sos", "Schote ohne Scheidewand"),
                    ("smf", "Schote mit falscher Scheidewand"),
                    ("soe", "Schötchen"),
                    ("spa", "Spaltfrucht"),
                    ("kok", "Kokke"),
                    ("dop", "Doppelachäne"),
                    ("bru", "Bruchfrucht"),
                    ("glh", "Gliederhülse"),
                    ("gls", "Gliederschote"),
                    ("kla", "Klausenfrucht"),
                    ("sam", "Sammelbalgfrucht"),
                    ("nue", "Nüsschen"),
                    ("stc", "Steinfrüchtchen"),
                    ("bac", "Balgfrüchtchen"),
                ],
                max_length=3,
                verbose_name="Fruchttyp",
            ),
        ),
        migrations.RunPython(update_fruit_ovule_pos, migrations.RunPython.noop),
        migrations.AlterField(
            model_name="fruit",
            name="ovule_pos",
            field=models.CharField(
                blank=True,
                choices=[
                    ("fr", "Fruchtknoten (Angiospermen)"),
                    ("za", "Zapfenschuppe (Gymnospermen)"),
                ],
                max_length=2,
                verbose_name="Samenanlage (Lage)",
            ),
        ),
        migrations.AlterField(
            model_name="fruit",
            name="seed_form",
            field=models.CharField(
                blank=True,
                help_text="Alles ausschreiben.",
                max_length=100,
                verbose_name="Samenform",
            ),
        ),
        migrations.AlterField(
            model_name="fruit",
            name="seed_num",
            field=models.CharField(
                blank=True, max_length=10, verbose_name="Samenanzahl"
            ),
        ),
        migrations.AlterField(
            model_name="fruit",
            name="winging",
            field=models.CharField(
                blank=True,
                help_text="Alles ausschreiben.",
                max_length=100,
                verbose_name="Beflügelung",
            ),
        ),
        migrations.AlterField(
            model_name="fruit",
            name="winging_feature",
            field=models.CharField(
                blank=True,
                help_text="Alles ausschreiben.",
                max_length=100,
                verbose_name="Besonderheit (Beflügelung)",
            ),
        ),
    ]
